@{
    Layout = "~/Views/Shared/_Root.cshtml";
}
@{
    //current category ID
    int currentCategoryId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("category", StringComparison.InvariantCultureIgnoreCase))
    {
        currentCategoryId = Convert.ToInt32(Url.RequestContext.RouteData.Values["categoryId"].ToString());
    }

    //current collection ID
    int currentCollectionId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("collection", StringComparison.InvariantCultureIgnoreCase))
    {
        currentCollectionId = Convert.ToInt32(Url.RequestContext.RouteData.Values["collectionId"].ToString());
    }

    //current attraction ID
    int currentAttractionId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("attraction", StringComparison.InvariantCultureIgnoreCase))
    {
        currentAttractionId = Convert.ToInt32(Url.RequestContext.RouteData.Values["attractionId"].ToString());
    }

    //current manufacturer ID
    int currentManufacturerId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("manufacturer", StringComparison.InvariantCultureIgnoreCase))
    {
        currentManufacturerId = Convert.ToInt32(Url.RequestContext.RouteData.Values["manufacturerId"].ToString());
    }


    //current product ID
    int currentProductId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("product", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("productdetails", StringComparison.InvariantCultureIgnoreCase))
    {
        currentProductId = Convert.ToInt32(Url.RequestContext.RouteData.Values["productId"].ToString());
    }
}

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            @if (IsSectionDefined("Breadcrumb"))
            {
                @RenderSection("Breadcrumb")
            }
        </div>
        
        <div class="col-sm-3">
            @if (IsSectionDefined("left"))
        {
        @RenderSection("left")
        }
        else
        {
        <div class="filter-column filter-column-collapse">
            <div class="filter-container" id="collapseFilters">

                @Html.Widget("left_side_column_before")
                @Html.Action("CollectionNavigation", "Catalog", new { currentCollectionId = currentCollectionId, currentProductId = currentProductId })
                @Html.Action("AttractionNavigation", "Catalog", new { currentAttractionId = currentAttractionId, currentProductId = currentProductId })
                @Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId })
                @if (IsSectionDefined("FilterSpecsBox"))
                {
                    @RenderSection("FilterSpecsBox")
                }
                @Html.Widget("left_side_column_after_category_navigation")
                
                
                @Html.Action("RecentlyViewedProductsBlock", "Product", new { productThumbPictureSize = 64 })
                @Html.Action("PopularProductTags", "Catalog")
                @Html.Action("PollBlock", "Poll", new { systemKeyword = "LeftColumnPoll" })
                @Html.Widget("left_side_column_after")
            </div>

        </div>

        }
        </div>
        <div class="col-sm-9">
            @Html.Widget("main_column_before")
            @RenderBody()
            @Html.Widget("main_column_after")
        </div>
    </div>

</div>
