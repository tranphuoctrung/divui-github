@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}
<div class="col-lg-3 col-md-3 col-sm-6 product-card product-card-vertical">
    <div class="product-card-cont-container">
        <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title" class="product-card-link">
            <div class="product-card-img-wrp">
                <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title">
            </div>
            @if (Model.IsSpecial)
            {
                <div class="product-badge is-special-offer">
                    <div>@T("Product.IsSpecial")</div>
                </div>
            }
            @if (Model.IsNew)
            {
                <div class="product-badge is-new">
                    <div>@T("Product.IsNew")</div>
                </div>
            }
            <div class="product-card-details">
                <header class="product-card-header">
                    <h4 class="product-card-title">@Model.Name</h4>
                </header>
                @{ 
                    var spec = Model.SpecificationAttributeModels.FirstOrDefault(m => m.SystemName == "TourDuration");
                }
                @if (spec != null)
                {
                    <div class="product-card-info">
                        <span class="duration-label">
                            <i class="icon icon-clock-5"></i>@spec.SpecificationAttributeName
                            <span class="duration-value">@spec.ValueRaw</span>
                        </span>
                    </div>
                }
                
                <div class="product-card-price-rating">
                    
                    @if (Model.ReviewOverviewModel.AllowCustomerReviews)
                    {

                        int ratingPercent = 0;
                        int length = 0;
                        if (Model.ReviewOverviewModel.TotalReviews != 0)
                        {
                            ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
                            length = (int)Model.ReviewOverviewModel.RatingSum / Model.ReviewOverviewModel.TotalReviews;
                        }
                        <div class="product-card-rating">

                            <span class="rating">

                                @for (int i = 0; i < length; i++)
                                {
                                    <i class="icon-star-8 voted"></i>
                                }

                                @for (int i = 0; i < (5 - length); i++)
                                {
                                    <i class="icon-star-8 devote"></i>
                                }

                            </span>
                            <span class="product-card-rating-counts">
                                @string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)
                            </span>
                        </div>
                    }
                   
                    <div class="product-card-price-wrp">
                        <span class="price-from">@T("ProductPrice.From")</span>
                        <span class="price-display">
                            @Model.ProductPrice.Price
                        </span>
                    </div>
                </div>
            </div>
        </a>
    </div>
</div>

