@model ProductDetailsModel
@using Nop.Core
@using Nop.Core.Domain.Seo;
@using Nop.Core.Domain.Divui.Catalog;
@using Nop.Core.Infrastructure;
@using Nop.Services.Localization;
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_Root.cshtml";

    //title, meta
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var seoSettings = EngineContext.Current.Resolve<SeoSettings>();

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(productUrl);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(storeName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        var storeName = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.GetLocalized(x => x.Name);
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(storeName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + Request.Url.AbsoluteUri + "\" />");
    }
}
<!--product breadcrumb-->

@Html.Widget("productdetails_after_breadcrumb", Model.Id)

<div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
    <!-- Schema -->
    <meta itemprop="name" content="this is product content">
    <meta itemprop="description" content="this is product description">
    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
        <meta content="@Model.ProductPrice.Price" itemprop="price">
        <meta content="@Model.ProductPrice.CurrencyCode" itemprop="priceCurrency">
    </div>
    <div itemprop="aggregateRating" itemscop itemtype="http://schema.org/AggregateRating">
        <meta content="@Model.ProductReviewOverview.RatingSum" itemprop="ratingValue">
        <meta content="5" itemprop="bestRating">
        <meta content="@Model.ProductReviewOverview.TotalReviews" itemprop="reviewCount">
    </div><!-- /Schema -->
    <header class="product-header">
        <div class="product-header-container container">
            <div class="product-header-content">
                <div class="product-feature-price-review">
                    <div class="product-feature-price-review-placement"></div>
                    <div class="product-feature-price-review-content">
                        @{ var pr = Model.ProductReviews.Items.FirstOrDefault();}
                        @if (pr != null)
                        {
                            <div class="product-feature-review">
                                <div class="top"></div>
                                <article class="review">
                                    <h4 class="title">
                                        @pr.Title
                                    </h4>
                                    <div class="review-rating">
                                        <span class="rating">

                                            @for (int i = 0; i < pr.Rating; i++)
                                            {
                                                <i class="icon-star-8 voted"></i>
                                            }

                                            @for (int i = 0; i < (5 - pr.Rating); i++)
                                            {
                                                <i class="icon-star-8 devote"></i>
                                            }

                                        </span>

                                        <span class="date">@pr.WrittenOnStr</span>
                                    </div>
                                    <div class="review-info">
                                        <span class="reviewed-by">@T("Products.WrittenBy")</span>
                                        <strong class="author">@pr.CustomerName</strong>
                                    </div>
                                </article>
                            </div>
                        }

                        <div class="product-feature-price">
                            <div class="bottom"></div>
                            <div class="price-details">
                                <div class="price-from">
                                    <span>@T("Products.FromPrice")</span>
                                    <span class="old-price">@Html.Raw(Model.ProductPrice.OldPrice)</span>
                                </div>
                                <div class="actual-price">
                                    <strong class="actual-price-display">@Html.Raw(Model.ProductPrice.Price)</strong>
                                    <span class="price-explanation">/ @T("Products.Adult")</span>
                                </div>
                                @if (Model.ProductPrice.SavePercent > 0)
                                {
                                    <span class="price-saving">
                                        <i class="icon-thumbs-up"></i> @string.Format(T("Products.Saving").Text, Model.ProductPrice.SavePercent)
                                    </span>
                                }

                            </div>
                            <div class="product-feature-booking">
                                <a href="#product-booking" class="btn btn-lg btn-block btn-warning"><strong>@T("Products.ProductBooking.Booking")</strong></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="product-feature-price-review-sm row">
        <div class="top"></div>
        <div class="bottom"></div>
        <div class="product-feature-price-review-sm-container container">
            <div class="col-sm-6">
                @if (Model.ProductReviewOverview.AllowCustomerReviews)
                {
                    if (pr != null)
                    {
                        <div class="product-feature-review">
                            <div class="top"></div>
                            <article class="review">
                                <h4 class="title">
                                    @pr.Title
                                </h4>
                                <div class="review-rating">
                                    <span class="rating">

                                        @for (int i = 0; i < pr.Rating; i++)
                                        {
                                            <i class="icon-star-8 voted"></i>
                                        }

                                        @for (int i = 0; i < (5 - pr.Rating); i++)
                                        {
                                            <i class="icon-star-8 devote"></i>
                                        }

                                    </span>

                                    <span class="date">@pr.WrittenOnStr</span>
                                </div>
                                <div class="review-info">
                                    <span class="reviewed-by">@T("Products.WrittenBy")</span>
                                    <strong class="author">@pr.CustomerName</strong>
                                </div>
                            </article>
                        </div>
                    }
                }

            </div>
            <hr class="product-feature-price-review-seperator">
            <div class="col-sm-6">
                <div class="product-feature-price">
                    <div class="price-details">
                        <div class="price-from">
                            <span>@T("Products.FromPrice")</span>
                            <span class="old-price">@Html.Raw(Model.ProductPrice.OldPrice)</span>
                        </div>
                        <div class="actual-price">
                            <strong class="actual-price-display">@Html.Raw(Model.ProductPrice.Price)</strong>
                            <span class="price-explanation">/ @T("Products.Adult")</span>
                        </div>
                        <span class="price-saving">
                            <i class="icon-thumbs-up"></i>@string.Format(T("Products.Saving").Text, Model.ProductPrice.SavePercent)
                        </span>
                    </div>
                    <div class="product-feature-booking">
                        <a class="btn btn-lg btn-block btn-warning"><strong>@T("Products.ProductBooking.Order")</strong></a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @Html.Partial("_ProductBreadcrumb", Model.Breadcrumb)

    <div class="product-content-container container">
        @Html.Widget("productdetails_top", Model.Id)
        <div class="row">
            <div class="col-md-8">
                <h1 class="product-title">
                    @Model.Name
                </h1>
                <div class="product-rating-location">
                    @if (Model.ProductReviewOverview.AllowCustomerReviews)
                    {

                        int ratingPercent = 0;
                        int length = 0;
                        if (Model.ProductReviewOverview.TotalReviews != 0)
                        {
                            ratingPercent = ((Model.ProductReviewOverview.RatingSum * 100) / Model.ProductReviewOverview.TotalReviews) / 5;
                            length = (int)Model.ProductReviewOverview.RatingSum / Model.ProductReviewOverview.TotalReviews;
                        }
                        <div class="product-rating">

                            <span class="rating">

                                @for (int i = 0; i < length; i++)
                                {
                                    <i class="icon-star-8 voted"></i>
                                }

                                @for (int i = 0; i < (5 - length); i++)
                                {
                                    <i class="icon-star-8 devote"></i>
                                }

                            </span>
                            <span class="product-card-rating-counts">
                                @string.Format(T("Reviews.TotalReviews").Text, Model.ProductReviewOverview.TotalReviews)
                            </span>
                        </div>
                    }

                    @{
                        var location = Model.ProductSpecifications.Where(ps => ps.SystemName == "Location").FirstOrDefault();
                        if (location != null)
                        {
                            <div class="product-location">
                                <span class="icon icon-location-2"></span>
                                <span class="location-label">@location.SpecificationAttributeName:</span>
                                <span class="location-value">@HttpUtility.HtmlDecode(location.ValueRaw)</span>
                            </div>
                        }
                    }

                </div>
                @{
                    var dataDictAttributes = new ViewDataDictionary();
                    dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                    @Html.Partial("_ProductSpecifications", Model.ProductSpecifications, dataDictAttributes)
                }

                <section class="product-booking" id="product-booking">
                    <div class="product-book-wrp">
                        <div class="box offers-form" id="bookingengine-search">
                            <div class="availability-container">
                                <header class="box-title">
                                    <h2>@T("Products.ProductBooking.Title")</h2>
                                </header>
                                <div class="validation-alert"></div>
                                <div class="availability-criteria">
                                    <form id="offers-form">
                                        <fieldset class="data-fields form-group">
                                            <label>
                                                <span class="label">@T("Products.ProductBooking.PickDate")</span>
                                                <input id="date" class="date-pick form-control" type="text" placeholder="ngay/thang/nam" data-name="starDate">
                                                <span class="icon icon-calendar"></span>
                                            </label>
                                            <button type="submit" id="btncheckprice" class="btn btn-warning"><strong>@T("Products.ProductBooking.CheckPrice")</strong></button>
                                        </fieldset>
                                    </form>

                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="alert alert-notice" id="dateValidator" style="display: none;">
                                <p>
                                    @T("Products.DateValidator.Description").Text
                                </p>
                            </div>
                        </div>
                        <div id="bookingengine-options">
                            @foreach (var option in Model.ProductOptions)
                            {
                            <!-- Begin Box Offer -->
                                <div class="box offers">
                                    <div class="offers-container">
                                        <div class="offers-table">
                                            <div class="offers-table-row">
                                                <div class="offers-table-row-title row">
                                                    <div class="col-md-8 col-sm-8">
                                                        <div class="offers-title-wrp">
                                                            <header class="offers-title">
                                                                <h3 class="title">@option.Name</h3>
                                                            </header>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div> <!-- End Box Offer -->
                            }


                        </div>


                    </div>
                </section>

                <section class="overview">
                    @Html.Raw(Model.Overview)
                </section>
                <section class="product-highlights">
                    @Html.Raw(Model.HightLight)
                </section>

                @Html.Partial("_ProductDetailsPictures", Model)

                <div class="product-details-content">
                    <section class="long-desc">
                        @Html.Raw(Model.FullDescription)
                    </section>
                    <section class="condition">
                        @Html.Raw(Model.Condition)
                    </section>
                </div>

                <section class="included">
                    @Html.Raw(Model.GuideToUse)
                </section>

                <section class="included">
                    @Html.Raw(Model.Tip)
                </section>
            </div>
            <div class="col-md-4">
                @Html.Partial("_WhyBook")
                <div class="sub-col-box engage-box">
                    <ul>
                        <li><a href=""><i class="icon icon-heart-filled"></i>@T("Product.AddToWhishlist")</a></li>
                        <li><a href=""><i class="icon icon-mail-2"></i>@T("Product.SendQuestions")</a></li>
                    </ul>
                </div>

                @if (Model.ProductDestination != null)
                {
                    <div class="location-banner-container">
                        <section class="location-banner" style="background-image: url('@Model.ProductDestination.PictureModel.FullSizeImageUrl')">
                            <a class="location-banner-headline" href="@Url.RouteUrl("Category", new { SeName = Model.ProductDestination.SeName })">
                                @Model.ProductDestination.Name
                            </a>
                            <a class="location-banner-button btn btn-default btn-sm" href="@Url.RouteUrl("Category", new { SeName = Model.ProductDestination.SeName })">@string.Format(T("Products.Destination.ViewAll").Text, Model.ProductDestination.NumberOfProducts)</a>
                        </section>
                    </div>
                }
                @if (Model.ProductAttraction != null)
                {
                    <div class="location-banner-container">
                        <section class="location-banner" style="background-image: url('@Model.ProductAttraction.PictureModel.FullSizeImageUrl')">
                            <a class="location-banner-headline" href="@Url.RouteUrl("Category", new { SeName = Model.ProductAttraction.SeName })">
                                @Model.ProductAttraction.Name
                            </a>
                            <a class="location-banner-button btn btn-default btn-sm" href="@Url.RouteUrl("Category", new { SeName = Model.ProductAttraction.SeName })">@string.Format(T("Products.Attraction.ViewAll").Text, Model.ProductAttraction.NumberOfProducts)</a>
                        </section>
                    </div>
                }

            </div>

        </div>
        @if (Model.ProductReviews.Items.Count > 0)
        {
            <div class="row">
                <div class="col-md-8">
                    <section class="customer-review">
                        <h2>@T("Product.CustomerReviews")</h2>
                        <div class="customer-review-feed">
                            <div id="productReviewList">
                                @Html.Partial("_ProductReviews", Model.ProductReviews)
                            </div>

                            @if (Model.ProductReviews.PagingFilteringContext.TotalPages > 2)
                            {
                                <div class="viewmore">
                                    <button type="button" id="btnLoadProductReviews" class="btn btn-block btn-default">@T("Reviews.ViewMore")</button>
                                    <input type="hidden" value="2" id="pageNumber" />
                                    <input type="hidden" value="@Model.Id" id="productId" />
                                    <input type="hidden" value="@Model.ProductReviews.PagingFilteringContext.PageSize" id="pageSize" />
                                    <script>


                                    $(document).ready(function () {
                                        $('#btnLoadProductReviews').click(function () {
                                            $.ajax({
                                                url: "/Product/LoadMoreProductReviews",
                                                type: "post",
                                                data: { productId: $('#productId').val(), PageNumber: $('#pageNumber').val(), PageSize: $('#pageSize').val() },
                                                beforeSend: function(){
                                                    $('#ajaxBusy').show();
                                                },
                                                success: function (response) {
                                                    $('#ajaxBusy').hide();
                                                    if (response.success) {
                                                        $('#productReviewList').append(response.html);
                                                        var number = $('#pageNumber').val();
                                                        if (response.totalPages > number  ) {
                                                            $('#pageNumber').val(number + 1);
                                                        }
                                                        else{
                                                            $('#btnLoadProductReviews').hide();
                                                        }


                                                    }
                                                },
                                                error: function (jqXHR, textStatus, errorThrown) {
                                                    $('#ajaxBusy').hide();
                                                    console.log(textStatus, errorThrown);
                                                }


                                            });
                                        });
                                    });


                                    </script>
                                </div>
                            }

                        </div>
                    </section>
                </div>
            </div>
        }
        @Html.Widget("productdetails_bottom", Model.Id)
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var nowDate = new Date();
        var today = new Date(@DateTime.Now.Year, @(DateTime.Now.Month - 1), @(DateTime.Now.Day + 1));

        //$('#date').datepicker('setDate', 'today');

        $("#date").datepicker({
            'startDate': 'today',
            'setDate': 'today',
            format: 'dd/mm/yyyy'
        });
        $("#date").datepicker("update", today);
        $("#dateValidator").hide();

        $('#btncheckprice').click(function (e) {
            e.preventDefault();
            var selectedDate = $("#date").datepicker("getDate");
            var checkDate = new Date(@DateTime.Now.Year, @(DateTime.Now.Month - 1), @(DateTime.Now.Day + 1));
            if(selectedDate < checkDate || $("#date").val() == "")
            {
                $("#dateValidator").show();
                return false;
            }
            else
            {
                $("#dateValidator").hide();

            }
            $("#bookingengine-options").html("");
            $("#bookingengine-options").html("<img src='/content/images/optionsloading.gif' style='margin: 0 auto;'>");

            var dates = [];

            $.ajax({
                type: "POST",
                data: {
                    productId: @Model.Id,
                    date: $("#date").val()
                },
                url: '/Product/ProductOptions',
                success: function (response) {
                    if(response.success){
                        $("#bookingengine-options").html(response.data);
                    }
                },
                error: function (xhr) {
                    console.log(xhr);
                }
            });

            $("#btncheckprice").html("@T("Products.ProductBooking.UpdatePrice").Text");
            $("#btncheckprice").removeClass("btn-warning");
            $("#btncheckprice").removeClass("btn-default");
            $("#btncheckprice").addClass("btn-default");

            return true;

        });
    });
</script>